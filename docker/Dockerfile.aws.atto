FROM furiousluke/baseimage:latest
MAINTAINER Luke Hodkinson <furious.luke@gmail.com>
CMD [ "/sbin/my_init" ]

RUN mkdir -p /app/requirements/boilerplate /app/var /app/boilerplate \
    /etc/service/app/app.d /etc/service/nginx /etc/service/redis \
    /etc/my_init.d

# Base setup and installation.
RUN apt-get -y update && \
    apt-get -y install python3 python3-pip git postgresql-client libpq-dev \
               libjpeg62 libjpeg-dev wget nginx gettext

# Build and conigure Redis.
RUN mkdir -p /var/redis/data && \
    cd /tmp && \
    wget http://download.redis.io/redis-stable.tar.gz && \
    tar xvzf redis-stable.tar.gz && \
    cd redis-stable && \
    make && \
    make install && \
    cp -f src/redis-sentinel /usr/local/bin && \
    mkdir -p /etc/redis && \
    cp -f *.conf /etc/redis && \
    rm -rf /tmp/redis-stable* && \
    sed -i 's/^\(bind .*\)$/# \1/' /etc/redis/redis.conf && \
    sed -i 's/^\(daemonize .*\)$/# \1/' /etc/redis/redis.conf && \
    sed -i 's/^\(dir .*\)$/# \1\ndir \/var\/redis\/data/' /etc/redis/redis.conf && \
    sed -i 's/^\(logfile .*\)$/# \1/' /etc/redis/redis.conf
# NOTE: For max performance add these to host...
#   echo "echo never > /sys/kernel/mm/transparent_hugepage/enabled" >> /etc/rc.local
#   echo "vm.overcommit_memory = 1" >> /etc/sysctl.conf

# Build the app.
ADD boilerplate/requirements/boilerplate /app/requirements/boilerplate
ADD requirements /app/requirements
RUN pip3 install -r /app/requirements/production.txt

# Cleanup packages.
RUN apt-get -y purge git libpq-dev wget && \
    apt-get -y clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    echo /root > /etc/container_environment/HOME

# App configuration.
ARG project
ADD ${project} /app/${project}/
ENV PYTHONPATH=/app/${project}:$PYTHONPATH
ENV DJANGO_SETTINGS_MODULE=${project}.settings.production
ENV ASGI_APP=${project}.asgi:channel_layer
ADD manage.py /app/
ADD webpack-stats.production.json /app/
ADD scripts/*.sh /app/scripts/
ADD scripts/*.conf /app/scripts/
ADD boilerplate/__init__.py /app/boilerplate
ADD boilerplate/manage.py /app/boilerplate
ADD boilerplate/docker/app.sh /etc/service/app/run
ADD boilerplate/docker/app.conf /etc/service/app/
ADD boilerplate/docker/daphne.conf /etc/service/app/app.d/
ADD boilerplate/docker/channelsworker.conf /etc/service/app/app.d/

# Nginx configuration.
ADD boilerplate/docker/nginx.aws.conf /etc/nginx/templ/nginx.conf
ADD boilerplate/docker/nginx /etc/nginx/nginx
ADD boilerplate/keys /etc/nginx/keys
ENV PORT=80
ENV WORKER_PROCESSES=1
ENV WORKER_CONNECTIONS=16
ENV SERVER_NAME=${project}
ADD boilerplate/docker/nginx.sh /etc/service/nginx/run

# Redis configuration.
ADD boilerplate/docker/redis.sh /etc/service/redis/run

WORKDIR /app

# ARG run
# ENV RUN=${run}
# CMD ./scripts/${RUN}.sh
